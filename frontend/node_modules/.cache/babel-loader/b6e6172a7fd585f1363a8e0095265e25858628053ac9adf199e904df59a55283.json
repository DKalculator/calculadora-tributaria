{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DKalculator\\\\calculadora-tributaria\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport aliquotas from \"./aliquotas.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [inputs, setInputs] = useState({\n    receita: 100000,\n    lucro_liquido: 50000,\n    estado: \"SP\",\n    setor: \"servicos\"\n  });\n  const [resultado, setResultado] = useState(null);\n  const limiteSimples = 4800000; // Limite para o Simples Nacional\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/simulate_regimes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(inputs)\n      });\n      const data = await response.json();\n      setResultado(data);\n    } catch (error) {\n      console.error(\"Erro ao buscar dados:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [inputs]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const resetInputs = () => {\n    setInputs({\n      receita: 1000000,\n      lucro_liquido: 50000,\n      estado: \"SP\",\n      setor: \"servicos\"\n    });\n  };\n  const explicacaoDinamica = () => {\n    var _aliquotas$estados$es, _aliquotas$setores$se, _aliquotas$estados$es2;\n    const estadoSelecionado = inputs.estado;\n    const setorSelecionado = inputs.setor;\n    const icms = ((_aliquotas$estados$es = aliquotas.estados[estadoSelecionado]) === null || _aliquotas$estados$es === void 0 ? void 0 : _aliquotas$estados$es.ICMS) || 0.18;\n    const iss = ((_aliquotas$setores$se = aliquotas.setores[setorSelecionado]) === null || _aliquotas$setores$se === void 0 ? void 0 : _aliquotas$setores$se.ISS) || 0.02;\n    const ibs = ((_aliquotas$estados$es2 = aliquotas.estados[estadoSelecionado]) === null || _aliquotas$estados$es2 === void 0 ? void 0 : _aliquotas$estados$es2.IBS) || 0.18;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Lucro Presumido:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), \" Al\\xEDquota de ICMS: \", icms * 100, \"%, ISS: \", iss * 100, \"%.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Lucro Real:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), \" Base de c\\xE1lculo sobre o lucro l\\xEDquido da empresa com al\\xEDquota total de 34%.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Novo Regime (IBS + CBS):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \" IBS: \", ibs * 100, \"% + CBS: 12% (total: \", ibs * 100 + 12, \"%).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  const regimes = [{\n    nome: \"Lucro Presumido\",\n    valor: resultado === null || resultado === void 0 ? void 0 : resultado.imposto_presumido\n  }, {\n    nome: \"Lucro Real\",\n    valor: resultado === null || resultado === void 0 ? void 0 : resultado.imposto_real\n  }, {\n    nome: \"Novo Regime\",\n    valor: resultado === null || resultado === void 0 ? void 0 : resultado.imposto_novo\n  }];\n\n  // Adiciona o Simples Nacional somente se a receita for menor ou igual ao limite\n  if (inputs.receita <= limiteSimples) {\n    regimes.push({\n      nome: \"Simples Nacional\",\n      valor: resultado === null || resultado === void 0 ? void 0 : resultado.simples_nacional\n    });\n  }\n  const regimeMaisVantajoso = resultado ? regimes.reduce((min, regime) => regime.valor < min.valor ? regime : min, regimes[0]) : null;\n  const dataGraficoBarra = resultado ? {\n    labels: regimes.map(regime => regime.nome),\n    datasets: [{\n      label: \"Comparação de Impostos\",\n      data: regimes.map(regime => regime.valor),\n      backgroundColor: [\"#6c757d\", \"#ffc107\", \"#007bff\", \"#28a745\"]\n    }]\n  } : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo\",\n      children: \"Simula\\xE7\\xE3o Tribut\\xE1ria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coluna-esquerda\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Entradas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Receita Bruta Anual: R$ \", parseFloat(inputs.receita).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"receita\",\n            min: \"50000\",\n            max: \"10000000\",\n            step: \"1000\",\n            value: inputs.receita,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Lucro L\\xEDquido (Lucro Real): R$ \", parseFloat(inputs.lucro_liquido).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"lucro_liquido\",\n            min: \"10000\",\n            max: \"5000000\",\n            step: \"1000\",\n            value: inputs.lucro_liquido,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Estado:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"estado\",\n            value: inputs.estado,\n            onChange: handleInputChange,\n            children: Object.keys(aliquotas.estados).map(estado => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: estado,\n              children: estado\n            }, estado, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Setor Econ\\xF4mico:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"setor\",\n            value: inputs.setor,\n            onChange: handleInputChange,\n            children: Object.keys(aliquotas.setores).map(setor => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: setor,\n              children: setor.charAt(0).toUpperCase() + setor.slice(1)\n            }, setor, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"explicacoes\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Explica\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), explicacaoDinamica(), inputs.receita > limiteSimples && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alerta\",\n            children: \"O Simples Nacional n\\xE3o est\\xE1 dispon\\xEDvel para receitas superiores a R$ 4.800.000,00.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coluna-direita\",\n        children: resultado && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grafico\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Compara\\xE7\\xE3o de Impostos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              data: dataGraficoBarra\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabela\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Detalhamento dos Tributos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Regime\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Imposto Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"% da Receita\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: regimes.map(regime => {\n                  var _regime$valor;\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: regime.nome\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\"R$ \", (_regime$valor = regime.valor) === null || _regime$valor === void 0 ? void 0 : _regime$valor.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [(regime.valor / inputs.receita * 100).toFixed(2), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 25\n                    }, this)]\n                  }, regime.nome, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OvWqW+dr4/ItUy7Eo2nP5xiQX4I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","Bar","aliquotas","jsxDEV","_jsxDEV","Fragment","_Fragment","register","App","_s","inputs","setInputs","receita","lucro_liquido","estado","setor","resultado","setResultado","limiteSimples","fetchData","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","handleInputChange","e","name","value","target","prev","resetInputs","explicacaoDinamica","_aliquotas$estados$es","_aliquotas$setores$se","_aliquotas$estados$es2","estadoSelecionado","setorSelecionado","icms","estados","ICMS","iss","setores","ISS","ibs","IBS","children","fileName","_jsxFileName","lineNumber","columnNumber","regimes","nome","valor","imposto_presumido","imposto_real","imposto_novo","push","simples_nacional","regimeMaisVantajoso","reduce","min","regime","dataGraficoBarra","labels","map","datasets","label","backgroundColor","className","parseFloat","toLocaleString","type","max","step","onChange","Object","keys","charAt","toUpperCase","slice","_regime$valor","toFixed","_c","$RefreshReg$"],"sources":["C:/Projects/DKalculator/calculadora-tributaria/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport aliquotas from \"./aliquotas.json\";\r\n\r\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\r\n\r\nconst App = () => {\r\n  const [inputs, setInputs] = useState({\r\n    receita: 100000,\r\n    lucro_liquido: 50000,\r\n    estado: \"SP\",\r\n    setor: \"servicos\",\r\n  });\r\n  const [resultado, setResultado] = useState(null);\r\n  const limiteSimples = 4800000; // Limite para o Simples Nacional\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/simulate_regimes\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(inputs),\r\n      });\r\n      const data = await response.json();\r\n      setResultado(data);\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar dados:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [inputs]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const resetInputs = () => {\r\n    setInputs({\r\n      receita: 1000000,\r\n      lucro_liquido: 50000,\r\n      estado: \"SP\",\r\n      setor: \"servicos\",\r\n    });\r\n  };\r\n\r\n  const explicacaoDinamica = () => {\r\n    const estadoSelecionado = inputs.estado;\r\n    const setorSelecionado = inputs.setor;\r\n\r\n    const icms = aliquotas.estados[estadoSelecionado]?.ICMS || 0.18;\r\n    const iss = aliquotas.setores[setorSelecionado]?.ISS || 0.02;\r\n    const ibs = aliquotas.estados[estadoSelecionado]?.IBS || 0.18;\r\n\r\n    return (\r\n      <>\r\n        <p>\r\n          <strong>Lucro Presumido:</strong> Alíquota de ICMS: {icms * 100}%, ISS: {iss * 100}%.\r\n        </p>\r\n        <p>\r\n          <strong>Lucro Real:</strong> Base de cálculo sobre o lucro líquido da empresa com alíquota total de 34%.\r\n        </p>\r\n        <p>\r\n          <strong>Novo Regime (IBS + CBS):</strong> IBS: {ibs * 100}% + CBS: 12% (total: {ibs * 100 + 12}%).\r\n        </p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const regimes = [\r\n    { nome: \"Lucro Presumido\", valor: resultado?.imposto_presumido },\r\n    { nome: \"Lucro Real\", valor: resultado?.imposto_real },\r\n    { nome: \"Novo Regime\", valor: resultado?.imposto_novo },\r\n  ];\r\n\r\n  // Adiciona o Simples Nacional somente se a receita for menor ou igual ao limite\r\n  if (inputs.receita <= limiteSimples) {\r\n    regimes.push({ nome: \"Simples Nacional\", valor: resultado?.simples_nacional });\r\n  }\r\n\r\n  const regimeMaisVantajoso = resultado\r\n    ? regimes.reduce((min, regime) => (regime.valor < min.valor ? regime : min), regimes[0])\r\n    : null;\r\n\r\n  const dataGraficoBarra = resultado\r\n    ? {\r\n        labels: regimes.map((regime) => regime.nome),\r\n        datasets: [\r\n          {\r\n            label: \"Comparação de Impostos\",\r\n            data: regimes.map((regime) => regime.valor),\r\n            backgroundColor: [\"#6c757d\", \"#ffc107\", \"#007bff\", \"#28a745\"],\r\n          },\r\n        ],\r\n      }\r\n    : null;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"titulo\">Simulação Tributária</h1>\r\n      <div className=\"layout\">\r\n        <div className=\"coluna-esquerda\">\r\n          <div className=\"inputs\">\r\n            <h2>Entradas</h2>\r\n            <label>Receita Bruta Anual: R$ {parseFloat(inputs.receita).toLocaleString()}</label>\r\n            <input\r\n              type=\"range\"\r\n              name=\"receita\"\r\n              min=\"50000\"\r\n              max=\"10000000\"\r\n              step=\"1000\"\r\n              value={inputs.receita}\r\n              onChange={handleInputChange}\r\n            />\r\n            <label>Lucro Líquido (Lucro Real): R$ {parseFloat(inputs.lucro_liquido).toLocaleString()}</label>\r\n            <input\r\n              type=\"range\"\r\n              name=\"lucro_liquido\"\r\n              min=\"10000\"\r\n              max=\"5000000\"\r\n              step=\"1000\"\r\n              value={inputs.lucro_liquido}\r\n              onChange={handleInputChange}\r\n            />\r\n            <label>Estado:</label>\r\n            <select name=\"estado\" value={inputs.estado} onChange={handleInputChange}>\r\n              {Object.keys(aliquotas.estados).map((estado) => (\r\n                <option key={estado} value={estado}>\r\n                  {estado}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <label>Setor Econômico:</label>\r\n            <select name=\"setor\" value={inputs.setor} onChange={handleInputChange}>\r\n              {Object.keys(aliquotas.setores).map((setor) => (\r\n                <option key={setor} value={setor}>\r\n                  {setor.charAt(0).toUpperCase() + setor.slice(1)}\r\n                </option>\r\n              ))}\r\n            </select>            \r\n          </div>\r\n          <div className=\"explicacoes\">\r\n            <h2>Explicações</h2>\r\n            {explicacaoDinamica()}\r\n            {inputs.receita > limiteSimples && (\r\n              <p className=\"alerta\">\r\n                O Simples Nacional não está disponível para receitas superiores a R$ 4.800.000,00.\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"coluna-direita\">\r\n          {resultado && (\r\n            <>\r\n              <div className=\"grafico\">\r\n                <h3>Comparação de Impostos</h3>\r\n                <Bar data={dataGraficoBarra} />\r\n              </div>\r\n              <div className=\"tabela\">\r\n                <h3>Detalhamento dos Tributos</h3>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Regime</th>\r\n                      <th>Imposto Total</th>\r\n                      <th>% da Receita</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {regimes.map((regime) => (\r\n                      <tr key={regime.nome}>\r\n                        <td>{regime.nome}</td>\r\n                        <td>R$ {regime.valor?.toFixed(2)}</td>\r\n                        <td>{((regime.valor / inputs.receita) * 100).toFixed(2)}%</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}