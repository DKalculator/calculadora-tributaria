{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DKalculator\\\\calculadora-tributaria\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport aliquotas from \"./aliquotas.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [inputs, setInputs] = useState({\n    receita: 100000,\n    lucro_liquido: 50000,\n    estado: \"SP\",\n    setor: \"servicos\"\n  });\n  const [resultado, setResultado] = useState(null);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/simulate_regimes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(inputs)\n      });\n      const data = await response.json();\n      setResultado(data);\n    } catch (error) {\n      console.error(\"Erro ao buscar dados:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [inputs]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const resetInputs = () => {\n    setInputs({\n      receita: 100000,\n      lucro_liquido: 50000,\n      estado: \"SP\",\n      setor: \"servicos\"\n    });\n  };\n  const explicacaoDinamica = () => {\n    var _aliquotas$estados$es, _aliquotas$setores$se, _aliquotas$estados$es2;\n    const estadoSelecionado = inputs.estado;\n    const setorSelecionado = inputs.setor;\n    const icms = ((_aliquotas$estados$es = aliquotas.estados[estadoSelecionado]) === null || _aliquotas$estados$es === void 0 ? void 0 : _aliquotas$estados$es.ICMS) || 0.18;\n    const iss = ((_aliquotas$setores$se = aliquotas.setores[setorSelecionado]) === null || _aliquotas$setores$se === void 0 ? void 0 : _aliquotas$setores$se.ISS) || 0.02;\n    const ibs = ((_aliquotas$estados$es2 = aliquotas.estados[estadoSelecionado]) === null || _aliquotas$estados$es2 === void 0 ? void 0 : _aliquotas$estados$es2.IBS) || 0.18;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Lucro Presumido:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" Al\\xEDquota de ICMS: \", icms * 100, \"%, ISS: \", iss * 100, \"%.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Lucro Real:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), \" Base de c\\xE1lculo sobre o lucro l\\xEDquido da empresa com al\\xEDquota total de 34%.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Novo Regime (IBS + CBS):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), \" IBS: \", ibs * 100, \"% + CBS: 12% (total: \", ibs * 100 + 12, \"%).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  const regimeMaisVantajoso = resultado ? [\"Lucro Presumido\", \"Lucro Real\", \"Novo Regime\", \"Simples Nacional\"].reduce((min, regime, index) => {\n    const valor = [resultado.imposto_presumido, resultado.imposto_real, resultado.imposto_novo, resultado.simples_nacional][index];\n    return valor < min.valor ? {\n      nome: regime,\n      valor\n    } : min;\n  }, {\n    nome: \"Lucro Presumido\",\n    valor: resultado.imposto_presumido\n  }) : null;\n  const dataGraficoBarra = resultado ? {\n    labels: [\"Lucro Presumido\", \"Lucro Real\", \"Novo Regime\", \"Simples Nacional\"],\n    datasets: [{\n      label: \"Comparação de Impostos\",\n      data: [resultado.imposto_presumido, resultado.imposto_real, resultado.imposto_novo, resultado.simples_nacional],\n      backgroundColor: [\"#6c757d\", \"#ffc107\", \"#007bff\", \"#28a745\"]\n    }]\n  } : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo\",\n      children: \"Simula\\xE7\\xE3o Tribut\\xE1ria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coluna-esquerda\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Entradas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Receita Bruta Anual: R$ \", parseFloat(inputs.receita).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"receita\",\n            min: \"50000\",\n            max: \"10000000\",\n            step: \"1000\",\n            value: inputs.receita,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Lucro L\\xEDquido (Lucro Real): R$ \", parseFloat(inputs.lucro_liquido).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            name: \"lucro_liquido\",\n            min: \"10000\",\n            max: \"5000000\",\n            step: \"1000\",\n            value: inputs.lucro_liquido,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Estado:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"estado\",\n            value: inputs.estado,\n            onChange: handleInputChange,\n            children: Object.keys(aliquotas.estados).map(estado => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: estado,\n              children: estado\n            }, estado, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Setor Econ\\xF4mico:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"setor\",\n            value: inputs.setor,\n            onChange: handleInputChange,\n            children: Object.keys(aliquotas.setores).map(setor => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: setor,\n              children: setor.charAt(0).toUpperCase() + setor.slice(1)\n            }, setor, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"botao-reset\",\n            onClick: resetInputs,\n            children: \"Resetar Entradas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"explicacoes\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Explica\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), explicacaoDinamica(), regimeMaisVantajoso && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"destaque\",\n            children: [\"Regime mais vantajoso: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: regimeMaisVantajoso.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 40\n            }, this), \" com imposto total de\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"R$ \", regimeMaisVantajoso.valor.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coluna-direita\",\n        children: resultado && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grafico\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Compara\\xE7\\xE3o de Impostos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              data: dataGraficoBarra\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OvWqW+dr4/ItUy7Eo2nP5xiQX4I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","Bar","aliquotas","jsxDEV","_jsxDEV","Fragment","_Fragment","register","App","_s","inputs","setInputs","receita","lucro_liquido","estado","setor","resultado","setResultado","fetchData","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","handleInputChange","e","name","value","target","prev","resetInputs","explicacaoDinamica","_aliquotas$estados$es","_aliquotas$setores$se","_aliquotas$estados$es2","estadoSelecionado","setorSelecionado","icms","estados","ICMS","iss","setores","ISS","ibs","IBS","children","fileName","_jsxFileName","lineNumber","columnNumber","regimeMaisVantajoso","reduce","min","regime","index","valor","imposto_presumido","imposto_real","imposto_novo","simples_nacional","nome","dataGraficoBarra","labels","datasets","label","backgroundColor","className","parseFloat","toLocaleString","type","max","step","onChange","Object","keys","map","charAt","toUpperCase","slice","onClick","toFixed","_c","$RefreshReg$"],"sources":["C:/Projects/DKalculator/calculadora-tributaria/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport aliquotas from \"./aliquotas.json\";\r\n\r\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\r\n\r\nconst App = () => {\r\n  const [inputs, setInputs] = useState({\r\n    receita: 100000,\r\n    lucro_liquido: 50000,\r\n    estado: \"SP\",\r\n    setor: \"servicos\",\r\n  });\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/simulate_regimes\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(inputs),\r\n      });\r\n      const data = await response.json();\r\n      setResultado(data);\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar dados:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [inputs]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const resetInputs = () => {\r\n    setInputs({\r\n      receita: 100000,\r\n      lucro_liquido: 50000,\r\n      estado: \"SP\",\r\n      setor: \"servicos\",\r\n    });\r\n  };\r\n\r\n  const explicacaoDinamica = () => {\r\n    const estadoSelecionado = inputs.estado;\r\n    const setorSelecionado = inputs.setor;\r\n\r\n    const icms = aliquotas.estados[estadoSelecionado]?.ICMS || 0.18;\r\n    const iss = aliquotas.setores[setorSelecionado]?.ISS || 0.02;\r\n    const ibs = aliquotas.estados[estadoSelecionado]?.IBS || 0.18;\r\n\r\n    return (\r\n      <>\r\n        <p>\r\n          <strong>Lucro Presumido:</strong> Alíquota de ICMS: {icms * 100}%, ISS: {iss * 100}%.\r\n        </p>\r\n        <p>\r\n          <strong>Lucro Real:</strong> Base de cálculo sobre o lucro líquido da empresa com alíquota total de 34%.\r\n        </p>\r\n        <p>\r\n          <strong>Novo Regime (IBS + CBS):</strong> IBS: {ibs * 100}% + CBS: 12% (total: {ibs * 100 + 12}%).\r\n        </p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const regimeMaisVantajoso = resultado\r\n    ? [\"Lucro Presumido\", \"Lucro Real\", \"Novo Regime\", \"Simples Nacional\"].reduce((min, regime, index) => {\r\n        const valor = [\r\n          resultado.imposto_presumido,\r\n          resultado.imposto_real,\r\n          resultado.imposto_novo,\r\n          resultado.simples_nacional,\r\n        ][index];\r\n        return valor < min.valor ? { nome: regime, valor } : min;\r\n      }, { nome: \"Lucro Presumido\", valor: resultado.imposto_presumido })\r\n    : null;\r\n\r\n  const dataGraficoBarra = resultado\r\n    ? {\r\n        labels: [\"Lucro Presumido\", \"Lucro Real\", \"Novo Regime\", \"Simples Nacional\"],\r\n        datasets: [\r\n          {\r\n            label: \"Comparação de Impostos\",\r\n            data: [\r\n              resultado.imposto_presumido,\r\n              resultado.imposto_real,\r\n              resultado.imposto_novo,\r\n              resultado.simples_nacional,\r\n            ],\r\n            backgroundColor: [\"#6c757d\", \"#ffc107\", \"#007bff\", \"#28a745\"],\r\n          },\r\n        ],\r\n      }\r\n    : null;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"titulo\">Simulação Tributária</h1>\r\n      <div className=\"layout\">\r\n        {/* Coluna da Esquerda */}\r\n        <div className=\"coluna-esquerda\">\r\n          <div className=\"inputs\">\r\n            <h2>Entradas</h2>\r\n            <label>Receita Bruta Anual: R$ {parseFloat(inputs.receita).toLocaleString()}</label>\r\n            <input\r\n              type=\"range\"\r\n              name=\"receita\"\r\n              min=\"50000\"\r\n              max=\"10000000\"\r\n              step=\"1000\"\r\n              value={inputs.receita}\r\n              onChange={handleInputChange}\r\n            />\r\n            <label>Lucro Líquido (Lucro Real): R$ {parseFloat(inputs.lucro_liquido).toLocaleString()}</label>\r\n            <input\r\n              type=\"range\"\r\n              name=\"lucro_liquido\"\r\n              min=\"10000\"\r\n              max=\"5000000\"\r\n              step=\"1000\"\r\n              value={inputs.lucro_liquido}\r\n              onChange={handleInputChange}\r\n            />\r\n            <label>Estado:</label>\r\n            <select name=\"estado\" value={inputs.estado} onChange={handleInputChange}>\r\n              {Object.keys(aliquotas.estados).map((estado) => (\r\n                <option key={estado} value={estado}>\r\n                  {estado}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <label>Setor Econômico:</label>\r\n            <select name=\"setor\" value={inputs.setor} onChange={handleInputChange}>\r\n              {Object.keys(aliquotas.setores).map((setor) => (\r\n                <option key={setor} value={setor}>\r\n                  {setor.charAt(0).toUpperCase() + setor.slice(1)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button className=\"botao-reset\" onClick={resetInputs}>Resetar Entradas</button>\r\n          </div>\r\n\r\n          {/* Explicações Dinâmicas */}\r\n          <div className=\"explicacoes\">\r\n            <h2>Explicações</h2>\r\n            {explicacaoDinamica()}\r\n            {regimeMaisVantajoso && (\r\n              <p className=\"destaque\">\r\n                Regime mais vantajoso: <strong>{regimeMaisVantajoso.nome}</strong> com imposto total de{\" \"}\r\n                <strong>R$ {regimeMaisVantajoso.valor.toFixed(2)}</strong>.\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Coluna da Direita */}\r\n        <div className=\"coluna-direita\">\r\n          {resultado && (\r\n            <>\r\n              <div className=\"grafico\">\r\n                <h3>Comparação de Impostos</h3>\r\n                <Bar data={dataGraficoBarra} />\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACpG,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzCX,OAAO,CAACY,QAAQ,CAACX,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEzE,MAAMQ,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC;IACnCoB,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,KAAK;IACpBC,MAAM,EAAE,IAAI;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAM0B,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,MAAM;MAC7B,CAAC,CAAC;MACF,MAAMgB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCV,YAAY,CAACS,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEDnC,SAAS,CAAC,MAAM;IACdyB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,MAAMoB,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCvB,SAAS,CAAEwB,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBzB,SAAS,CAAC;MACRC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,KAAK;MACpBC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC;EAED,MAAMsB,kBAAkB,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA,EAAAC,qBAAA,EAAAC,sBAAA;IAC/B,MAAMC,iBAAiB,GAAG/B,MAAM,CAACI,MAAM;IACvC,MAAM4B,gBAAgB,GAAGhC,MAAM,CAACK,KAAK;IAErC,MAAM4B,IAAI,GAAG,EAAAL,qBAAA,GAAApC,SAAS,CAAC0C,OAAO,CAACH,iBAAiB,CAAC,cAAAH,qBAAA,uBAApCA,qBAAA,CAAsCO,IAAI,KAAI,IAAI;IAC/D,MAAMC,GAAG,GAAG,EAAAP,qBAAA,GAAArC,SAAS,CAAC6C,OAAO,CAACL,gBAAgB,CAAC,cAAAH,qBAAA,uBAAnCA,qBAAA,CAAqCS,GAAG,KAAI,IAAI;IAC5D,MAAMC,GAAG,GAAG,EAAAT,sBAAA,GAAAtC,SAAS,CAAC0C,OAAO,CAACH,iBAAiB,CAAC,cAAAD,sBAAA,uBAApCA,sBAAA,CAAsCU,GAAG,KAAI,IAAI;IAE7D,oBACE9C,OAAA,CAAAE,SAAA;MAAA6C,QAAA,gBACE/C,OAAA;QAAA+C,QAAA,gBACE/C,OAAA;UAAA+C,QAAA,EAAQ;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,0BAAmB,EAACZ,IAAI,GAAG,GAAG,EAAC,UAAQ,EAACG,GAAG,GAAG,GAAG,EAAC,IACrF;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJnD,OAAA;QAAA+C,QAAA,gBACE/C,OAAA;UAAA+C,QAAA,EAAQ;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,yFAC9B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJnD,OAAA;QAAA+C,QAAA,gBACE/C,OAAA;UAAA+C,QAAA,EAAQ;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,UAAM,EAACN,GAAG,GAAG,GAAG,EAAC,uBAAqB,EAACA,GAAG,GAAG,GAAG,GAAG,EAAE,EAAC,KACjG;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,eACJ,CAAC;EAEP,CAAC;EAED,MAAMC,mBAAmB,GAAGxC,SAAS,GACjC,CAAC,iBAAiB,EAAE,YAAY,EAAE,aAAa,EAAE,kBAAkB,CAAC,CAACyC,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,EAAEC,KAAK,KAAK;IAClG,MAAMC,KAAK,GAAG,CACZ7C,SAAS,CAAC8C,iBAAiB,EAC3B9C,SAAS,CAAC+C,YAAY,EACtB/C,SAAS,CAACgD,YAAY,EACtBhD,SAAS,CAACiD,gBAAgB,CAC3B,CAACL,KAAK,CAAC;IACR,OAAOC,KAAK,GAAGH,GAAG,CAACG,KAAK,GAAG;MAAEK,IAAI,EAAEP,MAAM;MAAEE;IAAM,CAAC,GAAGH,GAAG;EAC1D,CAAC,EAAE;IAAEQ,IAAI,EAAE,iBAAiB;IAAEL,KAAK,EAAE7C,SAAS,CAAC8C;EAAkB,CAAC,CAAC,GACnE,IAAI;EAER,MAAMK,gBAAgB,GAAGnD,SAAS,GAC9B;IACEoD,MAAM,EAAE,CAAC,iBAAiB,EAAE,YAAY,EAAE,aAAa,EAAE,kBAAkB,CAAC;IAC5EC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,wBAAwB;MAC/B5C,IAAI,EAAE,CACJV,SAAS,CAAC8C,iBAAiB,EAC3B9C,SAAS,CAAC+C,YAAY,EACtB/C,SAAS,CAACgD,YAAY,EACtBhD,SAAS,CAACiD,gBAAgB,CAC3B;MACDM,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;IAC9D,CAAC;EAEL,CAAC,GACD,IAAI;EAER,oBACEnE,OAAA;IAAKoE,SAAS,EAAC,WAAW;IAAArB,QAAA,gBACxB/C,OAAA;MAAIoE,SAAS,EAAC,QAAQ;MAAArB,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDnD,OAAA;MAAKoE,SAAS,EAAC,QAAQ;MAAArB,QAAA,gBAErB/C,OAAA;QAAKoE,SAAS,EAAC,iBAAiB;QAAArB,QAAA,gBAC9B/C,OAAA;UAAKoE,SAAS,EAAC,QAAQ;UAAArB,QAAA,gBACrB/C,OAAA;YAAA+C,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBnD,OAAA;YAAA+C,QAAA,GAAO,0BAAwB,EAACsB,UAAU,CAAC/D,MAAM,CAACE,OAAO,CAAC,CAAC8D,cAAc,CAAC,CAAC;UAAA;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpFnD,OAAA;YACEuE,IAAI,EAAC,OAAO;YACZ3C,IAAI,EAAC,SAAS;YACd0B,GAAG,EAAC,OAAO;YACXkB,GAAG,EAAC,UAAU;YACdC,IAAI,EAAC,MAAM;YACX5C,KAAK,EAAEvB,MAAM,CAACE,OAAQ;YACtBkE,QAAQ,EAAEhD;UAAkB;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACFnD,OAAA;YAAA+C,QAAA,GAAO,oCAA+B,EAACsB,UAAU,CAAC/D,MAAM,CAACG,aAAa,CAAC,CAAC6D,cAAc,CAAC,CAAC;UAAA;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjGnD,OAAA;YACEuE,IAAI,EAAC,OAAO;YACZ3C,IAAI,EAAC,eAAe;YACpB0B,GAAG,EAAC,OAAO;YACXkB,GAAG,EAAC,SAAS;YACbC,IAAI,EAAC,MAAM;YACX5C,KAAK,EAAEvB,MAAM,CAACG,aAAc;YAC5BiE,QAAQ,EAAEhD;UAAkB;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACFnD,OAAA;YAAA+C,QAAA,EAAO;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtBnD,OAAA;YAAQ4B,IAAI,EAAC,QAAQ;YAACC,KAAK,EAAEvB,MAAM,CAACI,MAAO;YAACgE,QAAQ,EAAEhD,iBAAkB;YAAAqB,QAAA,EACrE4B,MAAM,CAACC,IAAI,CAAC9E,SAAS,CAAC0C,OAAO,CAAC,CAACqC,GAAG,CAAEnE,MAAM,iBACzCV,OAAA;cAAqB6B,KAAK,EAAEnB,MAAO;cAAAqC,QAAA,EAChCrC;YAAM,GADIA,MAAM;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEX,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eACTnD,OAAA;YAAA+C,QAAA,EAAO;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/BnD,OAAA;YAAQ4B,IAAI,EAAC,OAAO;YAACC,KAAK,EAAEvB,MAAM,CAACK,KAAM;YAAC+D,QAAQ,EAAEhD,iBAAkB;YAAAqB,QAAA,EACnE4B,MAAM,CAACC,IAAI,CAAC9E,SAAS,CAAC6C,OAAO,CAAC,CAACkC,GAAG,CAAElE,KAAK,iBACxCX,OAAA;cAAoB6B,KAAK,EAAElB,KAAM;cAAAoC,QAAA,EAC9BpC,KAAK,CAACmE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGpE,KAAK,CAACqE,KAAK,CAAC,CAAC;YAAC,GADpCrE,KAAK;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eACTnD,OAAA;YAAQoE,SAAS,EAAC,aAAa;YAACa,OAAO,EAAEjD,WAAY;YAAAe,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC,eAGNnD,OAAA;UAAKoE,SAAS,EAAC,aAAa;UAAArB,QAAA,gBAC1B/C,OAAA;YAAA+C,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACnBlB,kBAAkB,CAAC,CAAC,EACpBmB,mBAAmB,iBAClBpD,OAAA;YAAGoE,SAAS,EAAC,UAAU;YAAArB,QAAA,GAAC,yBACC,eAAA/C,OAAA;cAAA+C,QAAA,EAASK,mBAAmB,CAACU;YAAI;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,yBAAqB,EAAC,GAAG,eAC3FnD,OAAA;cAAA+C,QAAA,GAAQ,KAAG,EAACK,mBAAmB,CAACK,KAAK,CAACyB,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAlC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,KAC5D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNnD,OAAA;QAAKoE,SAAS,EAAC,gBAAgB;QAAArB,QAAA,EAC5BnC,SAAS,iBACRZ,OAAA,CAAAE,SAAA;UAAA6C,QAAA,eACE/C,OAAA;YAAKoE,SAAS,EAAC,SAAS;YAAArB,QAAA,gBACtB/C,OAAA;cAAA+C,QAAA,EAAI;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/BnD,OAAA,CAACH,GAAG;cAACyB,IAAI,EAAEyC;YAAiB;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B;QAAC,gBACN;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9C,EAAA,CAxKID,GAAG;AAAA+E,EAAA,GAAH/E,GAAG;AA0KT,eAAeA,GAAG;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}